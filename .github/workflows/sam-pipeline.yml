on:
  push:
    branches:
      - master
env:
  AWS_ROLE_ARN: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsAccess-AllEnv-role
jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - uses: aws-actions/setup-sam@v2
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ap-northeast-1
      # sam build 
      - run: sam build --use-container
      
      #test
      #- run : pip install -r tests/requirements.txt 
      #- run: pytest -s -k test_lambda_handler

      #S3 create
      continue-on-error: true
      - run: |
          aws s3 ls s3://sam-mymovie-backet-${{ secrets.AWS_ACCOUNT_ID }}/
          status=$?
          if [ $status -ne 0 ]; then
            aws s3 mb s3://sam-mymovie-backet-${{ secrets.AWS_ACCOUNT_ID }}/
          if 

# Run Unit tests- Specify unit tests here 

# sam deploy
      - run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --stack-name mymovie --s3-bucket sam-mymovie-backet-${{ secrets.AWS_ACCOUNT_ID }} --capabilities CAPABILITY_IAM --region ap-northeast-1 --parameter-overrides 'EnviromentType=stg TMDBApiKey=${{ secrets.TMDB_API_KEY}}'
